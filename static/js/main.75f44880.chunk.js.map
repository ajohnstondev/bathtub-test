{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","waterHeight","setWaterHeight","incTimer","setIncTimer","decTimer","setDecTimer","incFunc","height","decFunc","className","style","onClick","setTimeout","window","clearInterval","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAoDeA,MAjDf,WAAgB,IAAD,EACyBC,mBAAS,GADlC,mBACNC,EADM,KACOC,EADP,OAGmBF,mBAAS,MAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAImBJ,mBAAS,MAJ5B,mBAINK,EAJM,KAIIC,EAJJ,KAMPC,EAAU,WACdL,GAAe,SAAAM,GAAM,OAAIA,EAAS,IAAMA,EAAO,GAAKA,MAEhDC,EAAU,WACdP,GAAe,SAAAM,GAAM,OAAIA,EAAS,EAAIA,EAAO,GAAIA,MAyBnD,OACE,sBAAKE,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,QAAQC,MAAO,CAACH,OAAO,GAAD,OAAI,IAAIP,EAAR,WAGvC,sBAAKS,UAAU,UAAf,UACE,wBAAQE,QA7BK,WACjBC,YAAW,YACNR,GAA4B,IAAhBJ,IAAmBa,OAAOC,cAAcV,IACpDF,GAA4B,MAAhBF,IAAqBa,OAAOC,cAAcZ,KACxD,GAEHU,YAAW,WACTT,EAAYY,YAAYT,EAAS,QAChC,MAqBC,kCACA,wBAAQK,QAnBK,WACjBC,YAAW,YACNR,GAA4B,IAAhBJ,IAAmBa,OAAOC,cAAcV,IACpDF,GAA4B,MAAhBF,IAAqBa,OAAOC,cAAcZ,KACxD,GAEHU,YAAW,WACTP,EAAaU,YAAYP,EAAS,QACjC,MAWC,yCClCOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.75f44880.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [waterHeight, setWaterHeight] = useState(0);\n  \n  const [incTimer, setIncTimer] = useState(null);\n  const [decTimer, setDecTimer] = useState(null);\n\n  const incFunc = () => {\n    setWaterHeight(height => height < 100 ? height+20 : height);\n  }\n  const decFunc = () => {\n    setWaterHeight(height => height > 0 ? height-20: height);\n  }\n\n  const onIncrease = () => {    \n    setTimeout(function (){\n      if(decTimer || waterHeight === 0) window.clearInterval(decTimer);\n      if(incTimer || waterHeight === 100) window.clearInterval(incTimer);\n    }, 0)\n\n    setTimeout(function (){\n      setIncTimer(setInterval(incFunc, 2000));\n    }, 2000)    \n  }\n\n  const onDecrease = () => {\n    setTimeout(function (){\n      if(decTimer || waterHeight === 0) window.clearInterval(decTimer);\n      if(incTimer || waterHeight === 100) window.clearInterval(incTimer);\n    }, 0)\n\n    setTimeout(function (){\n      setDecTimer( setInterval(decFunc, 2000) );\n    }, 2000)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"bathtub\">\n        <div className=\"water\" style={{height:`${100-waterHeight}px`}}>\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <button onClick={onIncrease}> increaseWaterLevel </button>\n        <button onClick={onDecrease}> decreaseWaterLevel </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}